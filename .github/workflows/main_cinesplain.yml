name: Build and deploy to Azure

on:
  workflow_dispatch:
  push:
    branches:
      - main

env:
  NUGET_PACKAGES: ${{ github.workspace }}/.nuget/packages # This is needed to reduce the size of the cache. See https://github.com/actions/setup-dotnet?tab=readme-ov-file#caching-nuget-packages-in-monorepos

concurrency:
    group: 'cinesplain'
    cancel-in-progress: true

jobs:
  build:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.x'

      - name: Get node_modules cache
        uses: actions/cache@v4
        id: node_modules_cache
        with:
          path: |
            **/node_modules
          key: ${{ runner.os }}-node_modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node_modules-

      - name: Get nuget cache
        uses: actions/cache@v4
        id: nuget_cache
        with:
          path: |
            **/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/Cinesplain.Server.csproj') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - if: ${{ steps.node_modules_cache.outputs.cache-hit != 'true' }}
        name: Create .npmrc file
        run: |
          echo "@${{ vars.GH_OWNER }}:registry=https://npm.pkg.github.com/" > cinesplain.client/.npmrc
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.GITHUB_TOKEN }}" >> cinesplain.client/.npmrc

      - if: ${{ steps.nuget_cache.outputs.cache-hit != 'true' }}
        name: Authenticate private nuget repo
        run:
          dotnet nuget add source --username ${{ vars.GH_OWNER }} --password ${{ secrets.GITHUB_TOKEN }} --store-password-in-clear-text --name github "https://nuget.pkg.github.com/${{ vars.GH_OWNER }}/index.json"

      - name: Make certs directory
        run: mkdir $env:APPDATA/ASP.NET/https

      - name: Build with dotnet
        run: dotnet build -c Release

      - name: dotnet publish
        run: dotnet publish -c Release -property:PublishDir="${{ env.DOTNET_ROOT }}/cinesplain"
        
      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: .net-app
          path: "${{ env.DOTNET_ROOT }}/cinesplain"

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write #This is required for requesting the JWT

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: .net-app
      
      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'cinesplain'
          slot-name: 'Production'
          package: .
          